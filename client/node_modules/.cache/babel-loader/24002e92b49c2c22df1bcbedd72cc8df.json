{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mikanur/general_assembly/unit_4/project_4/Hoops-Card/client/src/containers/MainContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport Skills from '../screens/Skills';\nimport PlayerCreate from '../screens/PlayerCreate';\nimport PlayerDetail from '../screens/PlayerDetail';\nimport PlayerEdit from '../screens/PlayerEdit';\nimport Players from '../screens/Players';\nimport { getAllSkills } from '../services/skills';\nimport { destroyPlayer, getAllPlayers, postPlayer, putPlayer } from '../services/players';\nexport default function MainContainer(props) {\n  _s();\n\n  const [flavors, setFlavors] = useState([]);\n  const [foods, setFoods] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchFlavors = async () => {\n      const flavorData = await getAllFlavors();\n      setFlavors(flavorData);\n    };\n\n    const fetchFoods = async () => {\n      const foodData = await getAllFoods();\n      setFoods(foodData);\n    };\n\n    fetchFlavors();\n    fetchFoods();\n  }, []);\n\n  const handleCreate = async foodData => {\n    const newFood = await postFood(foodData);\n    setFoods(prevState => [...prevState, newFood]);\n    history.push('/foods');\n  };\n\n  const handleUpdate = async (id, foodData) => {\n    const updatedFood = await putFood(id, foodData);\n    setFoods(prevState => prevState.map(food => {\n      return food.id === Number(id) ? updatedFood : food;\n    }));\n    history.push('/foods');\n  };\n\n  const handleDelete = async id => {\n    await destroyFood(id);\n    setFoods(prevState => prevState.filter(food => food.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/flavors\",\n      children: /*#__PURE__*/_jsxDEV(Flavors, {\n        flavors: flavors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/foods/:id/edit\",\n      children: /*#__PURE__*/_jsxDEV(FoodEdit, {\n        foods: foods,\n        handleUpdate: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/foods/new\",\n      children: /*#__PURE__*/_jsxDEV(FoodCreate, {\n        handleCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/foods/:id\",\n      children: /*#__PURE__*/_jsxDEV(FoodDetail, {\n        flavors: flavors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/foods\",\n      children: /*#__PURE__*/_jsxDEV(Foods, {\n        foods: foods,\n        handleDelete: handleDelete,\n        currentUser: props.currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainContainer, \"9MR6wuutIjeDuVO9NE7Wh90oUi4=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/mikanur/general_assembly/unit_4/project_4/Hoops-Card/client/src/containers/MainContainer.jsx"],"names":["useState","useEffect","Switch","Route","useHistory","Skills","PlayerCreate","PlayerDetail","PlayerEdit","Players","getAllSkills","destroyPlayer","getAllPlayers","postPlayer","putPlayer","MainContainer","props","flavors","setFlavors","foods","setFoods","history","fetchFlavors","flavorData","getAllFlavors","fetchFoods","foodData","getAllFoods","handleCreate","newFood","postFood","prevState","push","handleUpdate","id","updatedFood","putFood","map","food","Number","handleDelete","destroyFood","filter","currentUser"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,kBAA1C;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,UAAvC,EAAmDC,SAAnD,QAAoE,qBAApE;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMqB,OAAO,GAAGjB,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,YAAY,GAAG,YAAY;AAC/B,YAAMC,UAAU,GAAG,MAAMC,aAAa,EAAtC;AACAN,MAAAA,UAAU,CAACK,UAAD,CAAV;AACD,KAHD;;AAIA,UAAME,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,WAAW,EAAlC;AACAP,MAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,KAHD;;AAIAJ,IAAAA,YAAY;AACZG,IAAAA,UAAU;AACX,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMG,YAAY,GAAG,MAAOF,QAAP,IAAoB;AACvC,UAAMG,OAAO,GAAG,MAAMC,QAAQ,CAACJ,QAAD,CAA9B;AACAN,IAAAA,QAAQ,CAACW,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeF,OAAf,CAAd,CAAR;AACAR,IAAAA,OAAO,CAACW,IAAR,CAAa,QAAb;AACD,GAJD;;AAMA,QAAMC,YAAY,GAAG,OAAOC,EAAP,EAAWR,QAAX,KAAwB;AAC3C,UAAMS,WAAW,GAAG,MAAMC,OAAO,CAACF,EAAD,EAAKR,QAAL,CAAjC;AACAN,IAAAA,QAAQ,CAACW,SAAS,IAAIA,SAAS,CAACM,GAAV,CAAcC,IAAI,IAAI;AAC1C,aAAOA,IAAI,CAACJ,EAAL,KAAYK,MAAM,CAACL,EAAD,CAAlB,GAAyBC,WAAzB,GAAuCG,IAA9C;AACD,KAFqB,CAAd,CAAR;AAGAjB,IAAAA,OAAO,CAACW,IAAR,CAAa,QAAb;AACD,GAND;;AAQA,QAAMQ,YAAY,GAAG,MAAON,EAAP,IAAc;AACjC,UAAMO,WAAW,CAACP,EAAD,CAAjB;AACAd,IAAAA,QAAQ,CAACW,SAAS,IAAIA,SAAS,CAACW,MAAV,CAAiBJ,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAArC,CAAd,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEjB;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,iBAAZ;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEE,KAAjB;AAAwB,QAAA,YAAY,EAAEc;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,YAAY,EAAEL;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEX;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAEE,KADT;AAEE,QAAA,YAAY,EAAEqB,YAFhB;AAGE,QAAA,WAAW,EAAExB,KAAK,CAAC2B;AAHrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA9DuB5B,a;UAGNX,U;;;KAHMW,a","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\n\nimport Skills from '../screens/Skills';\nimport PlayerCreate from '../screens/PlayerCreate';\nimport PlayerDetail from '../screens/PlayerDetail';\nimport PlayerEdit from '../screens/PlayerEdit';\nimport Players from '../screens/Players';\nimport { getAllSkills } from '../services/skills'\nimport { destroyPlayer, getAllPlayers, postPlayer, putPlayer } from '../services/players'\n\nexport default function MainContainer(props) {\n  const [flavors, setFlavors] = useState([]);\n  const [foods, setFoods] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchFlavors = async () => {\n      const flavorData = await getAllFlavors();\n      setFlavors(flavorData);\n    }\n    const fetchFoods = async () => {\n      const foodData = await getAllFoods();\n      setFoods(foodData);\n    }\n    fetchFlavors();\n    fetchFoods();\n  }, [])\n\n  const handleCreate = async (foodData) => {\n    const newFood = await postFood(foodData);\n    setFoods(prevState => [...prevState, newFood]);\n    history.push('/foods');\n  }\n\n  const handleUpdate = async (id, foodData) => {\n    const updatedFood = await putFood(id, foodData);\n    setFoods(prevState => prevState.map(food => {\n      return food.id === Number(id) ? updatedFood : food\n    }))\n    history.push('/foods');\n  }\n\n  const handleDelete = async (id) => {\n    await destroyFood(id);\n    setFoods(prevState => prevState.filter(food => food.id !== id))\n  }\n\n  return (\n    <Switch>\n      <Route path='/flavors'>\n        <Flavors flavors={flavors} />\n      </Route>\n      <Route path='/foods/:id/edit'>\n        <FoodEdit foods={foods} handleUpdate={handleUpdate} />\n      </Route>\n      <Route path='/foods/new'>\n        <FoodCreate handleCreate={handleCreate} />\n      </Route>\n      {/* Here, we're adding a route for our single food screen */}\n      {/* we're passing it \"flavors\" to use in our drop down form */}\n      <Route path='/foods/:id'>\n        <FoodDetail flavors={flavors} />\n      </Route>\n      <Route path='/foods'>\n        <Foods\n          foods={foods}\n          handleDelete={handleDelete}\n          currentUser={props.currentUser}\n        />\n      </Route>\n    </Switch>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}